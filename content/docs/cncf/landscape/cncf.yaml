cncf:
  landscape: https://landscape.cncf.io/
  landscape_yml: https://raw.githubusercontent.com/cncf/landscape/master/landscape.yml
  project:
  - name: Akri
    stage: sandbox
    github: https://github.com/project-akri/akri
    docs: https://docs.akri.sh
    description: https://docs.akri.sh
  - name: Atlantis
    stage: sandbox
    github: https://github.com/runatlantis/atlantis
    docs: https://www.runatlantis.io/
    description: Terraform Pull Request Automation for Teams
  - name: Cadence Workflow
    stage: sandbox
    github: https://github.com/cadence-workflow/cadence
    docs: https://cadenceworkflow.io/
    description: Cadence is a distributed, scalable, durable, and highly available
      fault-oblivious stateful code platform.
  - name: CDK for Kubernetes (CDK8s)
    stage: sandbox
    github: https://github.com/cdk8s-team/cdk8s
    docs: https://cdk8s.io/
    description: CDK8s lets you define Kubernetes apps and components using familiar
      programming languages and object-oriented APIs.
  - name: Cloud Custodian
    stage: incubating
    github: https://github.com/cloud-custodian/cloud-custodian
    docs: https://cloudcustodian.io/
    description: https://cloudcustodian.io/
  - name: DevStream
    stage: archived
    github: https://github.com/devstream-io/devstream
    docs: https://www.devstream.io/
    description: https://www.devstream.io/
  - name: kagent
    stage: sandbox
    github: https://github.com/kagent-dev/kagent
    docs: https://kagent.dev/
    description: Kagent is an open source programming framework designed for DevOps
      and platform engineers to run AI agents in Kubernetes
  - name: Kairos
    stage: sandbox
    github: https://github.com/kairos-io/kairos
    docs: https://kairos.io
    description: https://kairos.io
  - name: KCL
    stage: sandbox
    github: https://github.com/kcl-lang/kcl
    docs: https://kcl-lang.io/
    description: A constraint-based record & functional language mainly used in configuration
      and policy scenarios.
  - name: KitOps
    stage: sandbox
    github: https://github.com/kitops-ml/kitops
    docs: https://kitops.org/
    description: An open standard for packaging, managing, and deploying ML models
      and artifacts across different systems
  - name: kpt
    stage: sandbox
    github: https://github.com/kptdev/kpt
    docs: https://kpt.dev
    description: https://kpt.dev
  - name: Kubean
    stage: sandbox
    github: https://github.com/kubean-io/kubean
    docs: https://kubean-io.github.io/kubean/
    description: Product ready cluster lifecycle management toolchains based on kubespray
      and other cluster LCM engine.
  - name: KubeDL
    stage: archived
    github: https://github.com/kubedl-io/kubedl
    docs: https://kubedl.io
    description: https://kubedl.io
  - name: KubeEdge
    stage: graduated
    github: https://github.com/kubeedge/kubeedge
    docs: https://kubeedge.io/en/
    description: https://kubeedge.io/en/
  - name: KusionStack
    stage: sandbox
    github: https://github.com/KusionStack/kusion
    docs: https://kusionstack.io/
    description: https://kusionstack.io/
  - name: Meshery
    stage: sandbox
    github: https://github.com/meshery/meshery
    docs: https://meshery.io
    description: https://meshery.io
  - name: Metal³
    stage: incubating
    github: https://github.com/metal3-io/baremetal-operator
    docs: https://metal3.io/
    description: https://metal3.io/
  - name: OpenTofu
    stage: sandbox
    github: https://github.com/opentofu/opentofu
    docs: https://opentofu.org/
    description: OpenTofu is an open source infrastructure as code tool that enables
      users to safely and predictably provision and manage cloud and on-prem infrastructure.
      It's a community-driven fork of Terraform that maintains backward compatibility
      while offering enhanced features, stability.
  - name: OpenYurt
    stage: incubating
    github: https://github.com/openyurtio/openyurt
    docs: https://openyurt.io/
    description: An open platform that extending your native Kubernetes to edge.
  - name: Runme Notebooks
    stage: sandbox
    github: https://github.com/runmedev/runme
    docs: https://runme.dev/
    description: A toolchain that turns Markdown into interactive, cloud-native, runnable
      Notebook experiences for DevOps.
  - name: SuperEdge
    stage: archived
    github: https://github.com/superedge/superedge
    docs: https://superedge.io/
    description: An edge-native container management system for edge computing
  - name: Tinkerbell
    stage: sandbox
    github: https://github.com/tinkerbell/tinkerbell
    docs: https://tinkerbell.org/
    description: https://tinkerbell.org/
  - name: Distribution
    stage: sandbox
    github: https://github.com/distribution/distribution
    docs: https://github.com/distribution/distribution
    description: https://github.com/distribution/distribution
  - name: Dragonfly
    stage: graduated
    github: https://github.com/dragonflyoss/dragonfly
    docs: https://d7y.io/
    description: https://d7y.io/
  - name: Harbor
    stage: graduated
    github: https://github.com/goharbor/harbor
    docs: https://goharbor.io/
    description: https://goharbor.io/
  - name: zot
    stage: sandbox
    github: https://github.com/project-zot/zot
    docs: https://zotregistry.dev/
    description: Zot is an OCI-native container registry for distributing container
      images and OCI artifacts.
  - name: Bank-Vaults
    stage: sandbox
    github: https://github.com/bank-vaults/bank-vaults
    docs: https://bank-vaults.dev/
    description: 'Bank-Vaults is a Vault swiss-army knife: a K8s operator, Go client
      with automatic token renewal, automatic configuration, multiple unseal options
      and more. A CLI tool to init, unseal and configure Vault (auth methods, secret
      engines). Direct secret injection into Pods.'
  - name: bpfman
    stage: sandbox
    github: https://github.com/bpfman/bpfman
    docs: https://bpfman.io/
    description: An eBPF Manager for Linux and Kubernetes
  - name: Cartography
    stage: sandbox
    github: https://github.com/cartography-cncf/cartography
    docs: https://cartography.dev
    description: Cartography is a Python tool that consolidates infrastructure assets
      and the relationships between them in an intuitive graph view.
  - name: cert-manager
    stage: graduated
    github: https://github.com/cert-manager/cert-manager
    docs: https://cert-manager.io/
    description: https://cert-manager.io/
  - name: Confidential Containers
    stage: sandbox
    github: https://github.com/confidential-containers/confidential-containers
    docs: https://confidentialcontainers.org/
    description: Confidential Containers is an open source community working to enable
      cloud native  confidential computing by leveraging Trusted Execution Environments
      to protect  containers and data.
  - name: ContainerSSH
    stage: sandbox
    github: https://github.com/containerssh/containerssh
    docs: https://containerssh.io
    description: ContainerSSH launches a new container for each SSH connection in
      Kubernetes, Podman or Docker. The user is transparently dropped in the container
      and the container is removed when the user disconnects. Authentication and container
      configuration are dynamic using webhooks, no system users required.
  - name: Copa
    stage: sandbox
    github: https://github.com/project-copacetic/copacetic
    docs: https://github.com/project-copacetic/copacetic
    description: https://github.com/project-copacetic/copacetic
  - name: Curiefense
    stage: archived
    github: null
    docs: https://www.curiefense.io/
    description: https://www.curiefense.io/
  - name: Dex
    stage: sandbox
    github: https://github.com/dexidp/dex
    docs: https://dexidp.io/
    description: https://dexidp.io/
  - name: external-secrets
    stage: sandbox
    github: https://github.com/external-secrets/external-secrets
    docs: https://external-secrets.io/
    description: https://external-secrets.io/
  - name: Falco
    stage: graduated
    github: https://github.com/falcosecurity/falco
    docs: https://falco.org/
    description: https://falco.org/
  - name: Hexa
    stage: sandbox
    github: https://github.com/hexa-org/policy-orchestrator
    docs: https://hexaorchestration.org/
    description: https://hexaorchestration.org/
  - name: in-toto
    stage: graduated
    github: https://github.com/in-toto/in-toto
    docs: https://in-toto.io
    description: https://in-toto.io
  - name: Keycloak
    stage: incubating
    github: https://github.com/keycloak/keycloak
    docs: https://www.keycloak.org/
    description: Keycloak is an open-source identity and access management solution
      for modern applications and services,  built on top of industry security standard
      protocols.
  - name: Keylime
    stage: sandbox
    github: https://github.com/keylime/keylime
    docs: https://keylime.dev/
    description: Bootstrap & Maintain Trust on the Edge / Cloud and IoT.
  - name: KubeArmor
    stage: sandbox
    github: https://github.com/kubearmor/kubearmor
    docs: https://kubearmor.io/
    description: Runtime protection for Kubernetes & other cloud Workloads. Kubearmor
      provides a observability and policy enforcement system to restrict any unwanted,
      malicious behaviour of cloud-native workloads at runtime.
  - name: Kubescape
    stage: incubating
    github: https://github.com/kubescape/kubescape
    docs: https://kubescape.io/
    description: Kubescape is an open source security and compliance platform that
      scans clusters, Kubernetes manifest files (YAML files, and Helm charts), code
      repositories, container registries and images. It detects misconfigurations
      according to frameworks such as the NSA-CISA,  MITRE ATT&CK® and CIS, as well
      as software vulnerabilities, and calculates risk scores.
  - name: Kubewarden
    stage: sandbox
    github: https://github.com/kubewarden/kubewarden-controller
    docs: https://www.kubewarden.io
    description: 'Kubewarden is a Policy Engine powered by WebAssembly policies. Its
      policies can be written in CEL, Rego (OPA & Gatekeeper flavours), Rust, Go,
      YAML, and others. Kubewarden simplifies Policy-As-Code by allowing policy authors
      and consumers to use their preferred tooling and stack, develop and test policies
      out of cluster. '
  - name: Kyverno
    stage: incubating
    github: https://github.com/kyverno/kyverno
    docs: https://kyverno.io/
    description: https://kyverno.io/
  - name: Notary Project
    stage: incubating
    github: https://github.com/notaryproject/notation
    docs: https://notaryproject.dev/
    description: https://notaryproject.dev/
  - name: Open Policy Agent (OPA)
    stage: graduated
    github: https://github.com/open-policy-agent/opa
    docs: https://www.openpolicyagent.org/
    description: https://www.openpolicyagent.org/
  - name: Open Policy Containers
    stage: sandbox
    github: https://github.com/opcr-io/policy
    docs: https://openpolicycontainers.com
    description: A docker-inspired CLI for building, tagging, pushing, pulling, and
      signing OPA policies to and from OCI-compliant registries.
  - name: OpenFGA
    stage: incubating
    github: https://github.com/openfga/openfga
    docs: https://openfga.dev
    description: OpenFGA is a high performance and flexible authorization/permission
      system built for developers and inspired by Google Zanzibar
  - name: OSCAL-COMPASS
    stage: sandbox
    github: https://github.com/oscal-compass/compliance-trestle
    docs: https://github.com/oscal-compass/community
    description: The OSCAL COMPASS project is set of tools that enable the creation,
      validation, and governance of documentation artifacts for compliance needs.
      It leverages NIST's OSCAL (Open Security Controls Assessment Language) as a
      standard data format for interchange between tools and people, and provides
      an opinionated approach to OSCAL SDK and adoption by policy engines.
  - name: Paralus
    stage: sandbox
    github: https://github.com/paralus/paralus
    docs: https://www.paralus.io/
    description: Paralus is a free, open source tool that enables controlled, audited
      access to Kubernetes infrastructure and Zero trust Kubernetes with zero friction.
  - name: Parsec
    stage: sandbox
    github: https://github.com/parallaxsecond/parsec
    docs: https://parsec.community/
    description: https://parsec.community/
  - name: Ratify
    stage: sandbox
    github: https://github.com/ratify-project/ratify
    docs: https://ratify.dev/
    description: A verification engine on Kubernetes which enables verification of
      artifact security metadata and admits for deployment only those that comply
      with policies you create.
  - name: SlimToolkit
    stage: sandbox
    github: https://github.com/slimtoolkit/slim
    docs: https://slimtoolkit.org/
    description: Inspect, Optimize and Debug Your Containers
  - name: SOPS
    stage: sandbox
    github: https://github.com/getsops/sops
    docs: https://github.com/getsops
    description: sops is an editor of encrypted files that supports YAML, JSON, ENV,
      INI and BINARY formats and encrypts with AWS KMS, GCP KMS, Azure Key Vault,
      age, and PGP.
  - name: The Update Framework (TUF)
    stage: graduated
    github: https://github.com/theupdateframework/python-tuf
    docs: https://theupdateframework.github.io/
    description: https://theupdateframework.github.io/
  - name: Tokenetes
    stage: sandbox
    github: https://github.com/tokenetes/tokenetes
    docs: https://tokenetes.io/
    description: Tokenetes implements Transaction Tokens (TraTs) for microservices
      call chains.  It's a Kubernetes-native framework providing immutable identity
      and context in  service-to-service communication to prevent attacks like software
      supply chain  or privileged user compromise.
  - name: Athenz
    stage: sandbox
    github: https://github.com/AthenZ/athenz
    docs: https://www.athenz.io
    description: Open source platform for X.509 certificate based service authentication
      and fine grained access control in dynamic infrastructures
  - name: OAuth2 Proxy
    stage: sandbox
    github: https://github.com/oauth2-proxy/oauth2-proxy
    docs: https://oauth2-proxy.github.io/oauth2-proxy/
    description: A generic reverse proxy that provides authentication with Google,
      Azure, OpenID Connect and many more identity providers.
  - name: SPIFFE
    stage: graduated
    github: https://github.com/spiffe/spiffe
    docs: https://spiffe.io/
    description: https://spiffe.io/
  - name: SPIRE
    stage: graduated
    github: https://github.com/spiffe/spire
    docs: https://spiffe.io/spire/
    description: https://spiffe.io/spire/
  - name: Teller
    stage: archived
    github: https://github.com/tellerops/teller
    docs: https://tlr.dev
    description: https://tlr.dev
  - name: Carina
    stage: sandbox
    github: https://github.com/carina-io/carina
    docs: https://carina-io.github.io/
    description: https://carina-io.github.io/
  - name: CubeFS
    stage: graduated
    github: https://github.com/cubeFS/cubefs
    docs: https://cubefs.io/
    description: https://cubefs.io/
  - name: Curve
    stage: archived
    github: https://github.com/opencurve/curve
    docs: http://www.opencurve.io/
    description: Curve is a distributed storage system designed and developed independently
      by NetEase,  featured with high performance, high availability, high reliability
      and well expansibility,  and it can serve as the basis for storage systems designed
      for different scenario.
  - name: HwameiStor
    stage: sandbox
    github: https://github.com/hwameistor/hwameistor
    docs: https://hwameistor.io/
    description: Hwameistor is an HA local storage system for cloud-native stateful
      workloads
  - name: K8up
    stage: sandbox
    github: https://github.com/k8up-io/k8up
    docs: https://www.k8up.io/
    description: https://www.k8up.io/
  - name: Kanister
    stage: sandbox
    github: https://github.com/kanisterio/kanister
    docs: https://kanister.io
    description: https://kanister.io
  - name: Longhorn
    stage: incubating
    github: https://github.com/longhorn/longhorn
    docs: https://longhorn.io/
    description: Cloud-native distributed storage for Kubernetes
  - name: OpenEBS
    stage: sandbox
    github: https://github.com/openebs/openebs
    docs: https://www.openebs.io/
    description: https://www.openebs.io/
  - name: ORAS
    stage: sandbox
    github: https://github.com/oras-project/oras
    docs: https://oras.land/
    description: https://oras.land/
  - name: Piraeus Datastore
    stage: sandbox
    github: https://github.com/piraeusdatastore/piraeus-operator
    docs: https://piraeus.io/
    description: https://piraeus.io/
  - name: Rook
    stage: graduated
    github: https://github.com/rook/rook
    docs: https://rook.io/
    description: https://rook.io/
  - name: Vineyard
    stage: sandbox
    github: https://github.com/v6d-io/v6d
    docs: https://v6d.io
    description: Vineyard (v6d) is an in-memory immutable data manager.
  - name: containerd
    stage: graduated
    github: https://github.com/containerd/containerd
    docs: https://containerd.io/
    description: https://containerd.io/
  - name: composefs
    stage: sandbox
    github: https://github.com/containers/composefs
    docs: https://github.com/containers/composefs
    description: A project that combines Linux kernel features to provide read-only
      mountable filesystem trees stacking on top of an underlying "lower" Linux filesystem,
      particularly useful for mounting container images.
  - name: bootc
    stage: sandbox
    github: https://github.com/containers/bootc
    docs: https://github.com/containers/bootc
    description: The bootc provides transactional, in-place operating system images
      and updates using OCI/Docker container images. This project applies the Docker
      container layering model to bootable host systems, using standard OCI/Docker
      containers as a transport and delivery format for base operating system updates.
  - name: CRI-O
    stage: graduated
    github: https://github.com/cri-o/cri-o
    docs: https://cri-o.io/
    description: https://cri-o.io/
  - name: Hyperlight
    stage: sandbox
    github: https://github.com/hyperlight-dev/hyperlight
    docs: https://github.com/hyperlight-dev/hyperlight
    description: A lightweight, secure container runtime solution designed for modern
      cloud-native workloads
  - name: Inclavare Containers
    stage: sandbox
    github: https://github.com/inclavare-containers/inclavare-containers
    docs: https://github.com/inclavare-containers/
    description: https://github.com/inclavare-containers/
  - name: Krustlet
    stage: archived
    github: https://github.com/krustlet/krustlet
    docs: https://krustlet.dev
    description: https://krustlet.dev
  - name: Kuasar
    stage: sandbox
    github: https://github.com/kuasar-io/kuasar
    docs: https://kuasar.io/
    description: A multi-sandbox container runtime that provides cloud-native, all-scenario
      multiple sandbox container solutions.
  - name: Lima
    stage: incubating
    github: https://github.com/lima-vm/lima
    docs: https://github.com/lima-vm/lima
    description: Linux virtual machines, typically on macOS, for running containerd
  - name: Podman Container Tools
    stage: sandbox
    github: https://github.com/containers/podman
    docs: https://podman.io/
    description: A set of tools providing full management of container lifecycle,
      including Podman, Buildah, and Skopeo,  which manage containers and images without
      requiring a daemon or root privileges.
  - name: rkt
    stage: archived
    github: https://github.com/rkt/rkt
    docs: https://github.com/rkt/rkt
    description: https://github.com/rkt/rkt
  - name: urunc
    stage: sandbox
    github: https://github.com/urunc-dev/urunc
    docs: https://urunc.io/
    description: A CRI-compatible runtime for running unikernels and application kernels
      as containers.  urunc bridges the gap between unikernels and containerized environments,
      enabling seamless  integration with cloud-native architectures while maintaining
      OCI compatibility.
  - name: Virtual Kubelet
    stage: sandbox
    github: https://github.com/virtual-kubelet/virtual-kubelet
    docs: https://virtual-kubelet.io/
    description: https://virtual-kubelet.io/
  - name: Interlink
    stage: sandbox
    github: https://github.com/interTwin-eu/interLink
    docs: https://intertwin-eu.github.io/interLink/
    description: InterLink aims to provide an abstraction for the execution of a Kubernetes
      pod on any remote resource capable of managing a Container execution lifecycle
      thanks to the Virtual Kubelet interface. It allows you to extend your cloud
      environment anywhere by running Kubernetes workloads on various infrastructures,
      creating a seamless cloud-native experience across diverse environments.
  - name: WasmEdge Runtime
    stage: sandbox
    github: https://github.com/WasmEdge/WasmEdge
    docs: https://wasmedge.org/
    description: https://wasmedge.org/
  - name: youki
    stage: sandbox
    github: https://github.com/youki-dev/youki
    docs: https://youki-dev.github.io/youki/
    description: https://youki-dev.github.io/youki/
  - name: Antrea
    stage: sandbox
    github: https://github.com/antrea-io/antrea
    docs: https://antrea.io/
    description: https://antrea.io/
  - name: Cilium
    stage: graduated
    github: https://github.com/cilium/cilium
    docs: https://cilium.io/
    description: https://cilium.io/
  - name: CNI-Genie
    stage: archived
    github: https://github.com/cni-genie/CNI-Genie
    docs: https://cnigenie.netlify.app
    description: https://cnigenie.netlify.app
  - name: Container Network Interface (CNI)
    stage: incubating
    github: https://github.com/containernetworking/cni
    docs: https://www.cni.dev/
    description: https://www.cni.dev/
  - name: FabEdge
    stage: archived
    github: https://github.com/FabEdge/fabedge
    docs: https://github.com/FabEdge/
    description: https://github.com/FabEdge/
  - name: Kube-OVN
    stage: sandbox
    github: https://github.com/kubeovn/kube-ovn
    docs: https://kube-ovn.io
    description: https://kube-ovn.io
  - name: kube-vip
    stage: sandbox
    github: https://github.com/kube-vip/kube-vip
    docs: https://kube-vip.io
    description: Kubernetes Virtual IP and Load-Balancer for both control plane and
      Kubernetes services
  - name: Network Service Mesh
    stage: sandbox
    github: https://github.com/networkservicemesh/api
    docs: https://networkservicemesh.io/
    description: https://networkservicemesh.io/
  - name: OVN-Kubernetes
    stage: sandbox
    github: https://github.com/ovn-kubernetes/ovn-kubernetes
    docs: https://ovn-kubernetes.io/
    description: https://ovn-kubernetes.io/
  - name: Spiderpool
    stage: sandbox
    github: https://github.com/spidernet-io/spiderpool
    docs: https://spidernet-io.github.io/spiderpool/
    description: Spiderpool is the underlay and RDMA network solution of the Kubernetes,
      for bare metal, VM and public cloud
  - name: Submariner
    stage: sandbox
    github: https://github.com/submariner-io/submariner
    docs: https://submariner.io
    description: Submariner enables direct networking between Pods and Services in
      different Kubernetes clusters, either on-premises or in the cloud.
  - name: Armada
    stage: sandbox
    github: https://github.com/armadaproject/armada
    docs: https://armadaproject.io/
    description: https://armadaproject.io/
  - name: Capsule
    stage: sandbox
    github: https://github.com/projectcapsule/capsule
    docs: https://capsule.clastix.io
    description: Capsule implements a multi-tenant and policy-based environment in
      your Kubernetes cluster. It is designed as a micro-services-based ecosystem
      with the minimalist approach, leveraging only on upstream Kubernetes.
  - name: Clusternet
    stage: sandbox
    github: https://github.com/clusternet/clusternet
    docs: https://clusternet.io
    description: https://clusternet.io
  - name: Clusterpedia
    stage: sandbox
    github: https://github.com/clusterpedia-io/clusterpedia
    docs: https://clusterpedia.io
    description: Clusterpedia is used for complex resources search across multiple
      clusters, support simultaneous search of a single kind of resource  or multiple
      kinds of resources existing in multiple clusters.
  - name: Crossplane
    stage: graduated
    github: https://github.com/crossplane/crossplane
    docs: https://crossplane.io/
    description: Crossplane is the cloud native control plane framework that allows
      you to build control planes without needing to write code. Crossplane has a
      highly extensible backend that enables you to orchestrate applications and infrastructure
      no matter where they run and a highly configurable frontend that lets you define
      the declarative API it offers.
  - name: Eraser
    stage: sandbox
    github: https://github.com/eraser-dev/eraser
    docs: https://eraser-dev.github.io/eraser/
    description: Eraser uses vulnerability data to remove non-running images from
      all Kubernetes nodes in a cluster.
  - name: Fluid
    stage: sandbox
    github: https://github.com/fluid-cloudnative/fluid
    docs: https://fluid-cloudnative.github.io/
    description: Fluid is an orchestration platform for elastic data abstraction and
      acceleration in cloud native environment.
  - name: hami
    stage: sandbox
    github: https://github.com/Project-HAMi/HAMi
    docs: https://project-hami.github.io/HAMi/
    description: Heterogeneous AI Computing Virtualization Middleware
  - name: Karmada
    stage: incubating
    github: https://github.com/karmada-io/karmada
    docs: https://karmada.io/
    description: https://karmada.io/
  - name: kcp
    stage: sandbox
    github: https://github.com/kcp-dev/kcp
    docs: https://kcp.io
    description: https://kcp.io
  - name: k0s
    stage: sandbox
    github: https://github.com/k0sproject/k0s
    docs: https://k0sproject.io/
    description: https://k0sproject.io/
  - name: KEDA
    stage: graduated
    github: https://github.com/kedacore/keda
    docs: https://keda.sh/
    description: https://keda.sh/
  - name: Knative
    stage: graduated
    github: https://github.com/knative/serving
    docs: https://knative.dev
    description: 'Knative is a developer-focused serverless application layer which
      is a great complement to the existing Kubernetes application constructs. Knative
      consists of three components: an HTTP-triggered autoscaling container runtime
      called “Knative Serving”, a CloudEvents-over-HTTP asynchronous routing layer
      called “Knative Eventing”, and a developer-focused function framework which
      leverages the Serving and Eventing components, called "Knative Functions".'
  - name: Koordinator
    stage: sandbox
    github: https://github.com/koordinator-sh/koordinator
    docs: https://koordinator.sh
    description: QoS based scheduling system for hybrid orchestration workloads on
      Kubernetes, bringing workloads the best layout and status.
  - name: kube-rs
    stage: sandbox
    github: https://github.com/kube-rs/kube
    docs: https://kube.rs
    description: kube-rs is the core Rust ecosystem for building applications against
      Kubernetes
  - name: Kubeflow
    stage: incubating
    github: https://github.com/kubeflow/kubeflow
    docs: https://kubeflow.org
    description: Kubeflow is the foundation of tools for AI Platforms on Kubernetes.
  - name: KubeFleet
    stage: sandbox
    github: https://github.com/kubefleet-dev/kubefleet
    docs: https://kubefleet.dev/
    description: A multi-cluster solution that enables users to effectively manage
      their applications running in multiple Kubernetes clusters.
  - name: Kubernetes
    stage: graduated
    github: https://github.com/kubernetes/kubernetes
    docs: https://kubernetes.io/
    description: Kubernetes is an open-source system for automating deployment, scaling,
      and management of containerized applications
  - name: KubeSlice
    stage: sandbox
    github: https://github.com/kubeslice/kubeslice
    docs: https://kubeslice.io
    description: https://kubeslice.io
  - name: KubeStellar
    stage: sandbox
    github: https://github.com/kubestellar/kubestellar
    docs: https://kubestellar.io
    description: https://kubestellar.io
  - name: Kured
    stage: sandbox
    github: https://github.com/kubereboot/kured
    docs: https://kured.dev
    description: Kured (KUbernetes REboot Daemon) is a Kubernetes daemonset that performs
      safe automatic node reboots when the need to do so is indicated by the package
      management system of the underlying OS
  - name: Open Cluster Management
    stage: sandbox
    github: https://github.com/open-cluster-management-io/ocm
    docs: https://open-cluster-management.io/
    description: https://open-cluster-management.io/
  - name: OpenFunction
    stage: sandbox
    github: https://github.com/OpenFunction/OpenFunction
    docs: https://openfunction.dev
    description: https://openfunction.dev
  - name: Serverless Devs
    stage: sandbox
    github: https://github.com/serverless-devs/serverless-devs
    docs: https://www.serverless-devs.com/
    description: https://www.serverless-devs.com/
  - name: Volcano
    stage: incubating
    github: https://github.com/volcano-sh/volcano
    docs: https://volcano.sh/
    description: https://volcano.sh/
  - name: wasmCloud
    stage: incubating
    github: https://github.com/wasmCloud/wasmCloud
    docs: https://wasmcloud.com
    description: https://wasmcloud.com
  - name: CoreDNS
    stage: graduated
    github: https://github.com/coredns/coredns
    docs: https://coredns.io/
    description: https://coredns.io/
  - name: etcd
    stage: graduated
    github: https://github.com/etcd-io/etcd
    docs: https://etcd.io/
    description: https://etcd.io/
  - name: k8gb
    stage: sandbox
    github: https://github.com/k8gb-io/k8gb
    docs: https://www.k8gb.io
    description: https://www.k8gb.io
  - name: Oxia
    stage: sandbox
    github: https://github.com/oxia-db/oxia
    docs: https://oxia-db.github.io
    description: Oxia is a scalable metadata store and coordination system
  - name: Xline
    stage: archived
    github: https://github.com/xline-kv/Xline
    docs: https://www.xline.cloud
    description: Xline is a high-performance geo-distributed metadata management system,
      which is compatible with the ETCD interface.
  - name: gRPC
    stage: incubating
    github: https://github.com/grpc/grpc
    docs: https://grpc.io/
    description: https://grpc.io/
  - name: Connect RPC
    stage: sandbox
    github: https://github.com/connectrpc/connect-go
    docs: https://connectrpc.com/
    description: Connect is a family of libraries for building browser and gRPC-compatible
      HTTP APIs.
  - name: BFE
    stage: sandbox
    github: https://github.com/bfenetworks/bfe
    docs: https://www.bfe-networks.net
    description: Open-source layer 7 load balancer derived from proprietary Baidu
      FrontEnd
  - name: Contour
    stage: incubating
    github: https://github.com/projectcontour/contour
    docs: https://projectcontour.io
    description: https://projectcontour.io
  - name: Envoy
    stage: graduated
    github: https://github.com/envoyproxy/envoy
    docs: https://www.envoyproxy.io
    description: https://www.envoyproxy.io
  - name: LoxiLB
    stage: sandbox
    github: https://github.com/loxilb-io/loxilb
    docs: https://loxilb.io
    description: eBPF based cloud-native load-balancer. Powering Kubernetes|Edge|5G|IoT|XaaS
      Apps.
  - name: MetalLB
    stage: sandbox
    github: https://github.com/metallb/metallb
    docs: https://metallb.universe.tf
    description: https://metallb.universe.tf
  - name: OpenELB
    stage: archived
    github: https://github.com/openelb/openelb
    docs: https://openelb.github.io
    description: https://openelb.github.io
  - name: Easegress
    stage: sandbox
    github: https://github.com/easegress-io/easegress
    docs: https://megaease.com/easegress
    description: https://megaease.com/easegress
  - name: Emissary-Ingress
    stage: incubating
    github: https://github.com/emissary-ingress/emissary
    docs: https://emissary-ingress.dev/
    description: https://emissary-ingress.dev/
  - name: Kgateway
    stage: sandbox
    github: https://github.com/kgateway-dev/kgateway
    docs: https://kgateway.dev/
    description: An Envoy-powered, Kubernetes-native API Gateway that integrates Kubernetes
      Gateway API with a control plane for API connectivity in any cloud environment.
  - name: Kuadrant
    stage: sandbox
    github: https://github.com/kuadrant/kuadrant-operator
    docs: https://kuadrant.io
    description: Kuadrant combines Gateway API and Istio-based gateway controllers
      to enhance application connectivity. It enables platform engineers  and application
      developers to easily connect, secure, and protect their services and infrastructure
      across multiple clusters  with policies for TLS, DNS, application authentication
      & authorization, and rate limiting.
  - name: Aeraki Mesh
    stage: sandbox
    github: https://github.com/aeraki-mesh/aeraki
    docs: https://www.aeraki.net/
    description: Aeraki Mesh allows you to manage any layer-7 traffic in a service
      mesh
  - name: Istio
    stage: graduated
    github: https://github.com/istio/istio
    docs: https://istio.io/
    description: Simplify observability, traffic management, security, and policy
      with the Istio service mesh.
  - name: Kmesh
    stage: sandbox
    github: https://github.com/kmesh-net/kmesh
    docs: https://kmesh.net
    description: Kmesh is a high-performance and low overhead service mesh data plane
      based on eBPF and programmable kernel. Kmesh brings traffic management, security
      and monitoring to service communication without needing application code changes.
      It is natively sidecarless, zero intrusion and without adding any resource cost
      to application container.
  - name: Kuma
    stage: sandbox
    github: https://github.com/kumahq/kuma
    docs: https://kuma.io
    description: https://kuma.io
  - name: Linkerd
    stage: graduated
    github: https://github.com/linkerd/linkerd2
    docs: https://linkerd.io/
    description: Ultra light, ultra simple, ultra powerful. Linkerd adds security,
      observability, and reliability to Kubernetes, without the complexity.
  - name: Merbridge
    stage: archived
    github: https://github.com/merbridge/merbridge
    docs: https://merbridge.io/
    description: Use eBPF to speed up your Service Mesh like crossing an Einstein-Rosen
      Bridge.
  - name: Open Service Mesh
    stage: archived
    github: https://github.com/openservicemesh/osm
    docs: https://openservicemesh.io/
    description: https://openservicemesh.io/
  - name: Sermant
    stage: sandbox
    github: https://github.com/sermant-io/Sermant
    docs: https://sermant.io/
    description: Sermant a proxyless service mesh solution based on Javaagent.
  - name: Service Mesh Interface (SMI)
    stage: archived
    github: https://github.com/servicemeshinterface/smi-spec
    docs: https://smi-spec.io
    description: https://smi-spec.io
  - name: Service Mesh Performance
    stage: archived
    github: https://github.com/service-mesh-performance/service-mesh-performance
    docs: https://smp-spec.io/
    description: https://smp-spec.io/
  - name: CloudNativePG
    stage: sandbox
    github: https://github.com/cloudnative-pg/cloudnative-pg
    docs: https://www.cloudnative-pg.io/
    description: CloudNativePG is a comprehensive platform designed to seamlessly
      manage PostgreSQL databases within Kubernetes environments, covering the entire
      operational lifecycle from initial deployment to ongoing maintenance
  - name: openGemini
    stage: sandbox
    github: https://github.com/openGemini/openGemini
    docs: https://www.opengemini.org
    description: openGemini is an open source distributed time series DBMS with high
      concurrency, high performance, and high scalability, focusing on the storage
      and analysis of massive observability data.
  - name: SchemaHero
    stage: sandbox
    github: https://github.com/schemahero/schemahero
    docs: https://schemahero.io
    description: https://schemahero.io
  - name: TiKV
    stage: graduated
    github: https://github.com/tikv/tikv
    docs: https://tikv.org
    description: A distributed transactional key-value database. Based on the design
      of Google Spanner and HBase, but simpler to manage and without dependencies
      on any distributed filesystem
  - name: Vitess
    stage: graduated
    github: https://github.com/vitessio/vitess
    docs: https://vitess.io/
    description: MySQL-compatible, horizontally scalable, cloud-native database solution.
  - name: CloudEvents
    stage: graduated
    github: https://github.com/cloudevents/spec
    docs: https://cloudevents.io/
    description: Standardizing common eventing metadata and their location to help
      with event identification and routing.
  - name: Drasi
    stage: sandbox
    github: http://github.com/drasi-project/drasi-platform
    docs: https://drasi.io
    description: A data change processing platform to simplify change-driven systems
      that need to detect, evaluate, and react to data changes quickly and efficiently
      at scale.
  - name: NATS
    stage: incubating
    github: https://github.com/nats-io/nats-server
    docs: https://nats.io/
    description: NATS.io is a connective technology for distributed systems and is
      a perfect fit to connect devices, edge, cloud or hybrid deployments. True multi-tenancy
      makes NATS ideal for SaaS and self-healing and scaling technology allows for
      topology changes anytime with zero downtime.
  - name: Pravega
    stage: archived
    github: https://github.com/pravega/pravega
    docs: https://cncf.pravega.io
    description: https://cncf.pravega.io
  - name: Strimzi
    stage: incubating
    github: https://github.com/strimzi/strimzi-kafka-operator
    docs: https://strimzi.io/
    description: https://strimzi.io/
  - name: Tremor
    stage: sandbox
    github: https://github.com/tremor-rs/tremor-runtime
    docs: https://www.tremor.rs/
    description: https://www.tremor.rs/
  - name: Artifact Hub
    stage: incubating
    github: https://github.com/artifacthub/hub
    docs: https://artifacthub.io
    description: https://artifacthub.io
  - name: Backstage
    stage: incubating
    github: https://github.com/backstage/backstage
    docs: https://backstage.io/
    description: https://backstage.io/
  - name: Buildpacks
    stage: incubating
    github: https://github.com/buildpacks/pack
    docs: https://buildpacks.io/
    description: https://buildpacks.io/
  - name: Carvel
    stage: sandbox
    github: https://github.com/carvel-dev/ytt
    docs: https://carvel.dev
    description: Carvel provides a set of reliable, single-purpose, composable tools
      that aid in your application building, configuration, and deployment to Kubernetes.
  - name: Dalec
    stage: sandbox
    github: https://github.com/project-dalec/dalec
    docs: https://github.com/project-dalec/dalec
    description: Dalec provides a declarative format for building system packages
      and containers from those packages in a secure way for supply chain security.
  - name: Dapr
    stage: graduated
    github: https://github.com/dapr/dapr
    docs: https://dapr.io
    description: https://dapr.io
  - name: Devfile
    stage: sandbox
    github: https://github.com/devfile/api
    docs: https://devfile.io
    description: https://devfile.io
  - name: DevSpace
    stage: sandbox
    github: https://github.com/devspace-sh/devspace
    docs: https://devspace.sh
    description: https://devspace.sh
  - name: Helm
    stage: graduated
    github: https://github.com/helm/helm
    docs: https://helm.sh/
    description: https://helm.sh/
  - name: ko
    stage: sandbox
    github: https://github.com/ko-build/ko
    docs: https://ko.build/
    description: https://ko.build/
  - name: Konveyor
    stage: sandbox
    github: https://github.com/konveyor/operator
    docs: https://www.konveyor.io/
    description: https://www.konveyor.io/
  - name: Krator
    stage: archived
    github: https://github.com/krator-rs/krator
    docs: https://docs.rs/crate/krator/latest
    description: https://docs.rs/crate/krator/latest
  - name: KubeVela
    stage: incubating
    github: https://github.com/kubevela/kubevela
    docs: https://kubevela.io
    description: https://kubevela.io
  - name: KubeVirt
    stage: incubating
    github: https://github.com/kubevirt/kubevirt
    docs: https://kubevirt.io/
    description: https://kubevirt.io/
  - name: KUDO
    stage: sandbox
    github: https://github.com/kudobuilder/kudo
    docs: https://kudo.dev/
    description: https://kudo.dev/
  - name: Microcks
    stage: sandbox
    github: https://github.com/microcks/microcks
    docs: https://microcks.io
    description: https://microcks.io
  - name: ModelPack
    stage: sandbox
    github: https://github.com/modelpack/model-spec
    docs: https://github.com/modelpack/model-spec
    description: The project establishes open standards for packaging, distributing
      and running AI artifacts in the cloud-native environment.
  - name: Nocalhost
    stage: archived
    github: https://github.com/nocalhost/nocalhost
    docs: https://nocalhost.dev
    description: https://nocalhost.dev
  - name: Operator Framework
    stage: incubating
    github: https://github.com/operator-framework/operator-sdk
    docs: https://operatorframework.io/
    description: https://operatorframework.io/
  - name: Podman Desktop
    stage: sandbox
    github: https://github.com/podman-desktop/podman-desktop
    docs: https://podman-desktop.io/
    description: An open-source tool for developers to work with containers and Kubernetes
      with an intuitive and user-friendly interface to effortlessly build, manage,
      and deploy containers and Kubernetes — all from the desktop.
  - name: Porter
    stage: sandbox
    github: https://github.com/getporter/porter
    docs: https://porter.sh/
    description: https://porter.sh/
  - name: Radius
    stage: sandbox
    github: https://github.com/radius-project/radius
    docs: https://radapp.io/
    description: Radius is a cloud-native application platform that enables developers
      and the platform engineers that support them to collaborate on delivering and
      managing cloud-native applications that follow organizational best practices
      for cost, operations and security, by default.
  - name: Score
    stage: sandbox
    github: https://github.com/score-spec/spec
    docs: https://score.dev/
    description: Score is an open-source workload specification designed to simplify
      development for cloud-native developers.
  - name: sealer
    stage: archived
    github: https://github.com/sealerio/sealer
    docs: http://sealer.cool/
    description: http://sealer.cool/
  - name: Serverless Workflow
    stage: sandbox
    github: https://github.com/serverlessworkflow/specification
    docs: https://serverlessworkflow.io
    description: https://serverlessworkflow.io
  - name: Shipwright
    stage: sandbox
    github: https://github.com/shipwright-io/build
    docs: https://shipwright.io
    description: https://shipwright.io
  - name: Stacker
    stage: sandbox
    github: https://github.com/project-stacker/stacker
    docs: https://stackerbuild.io
    description: Stacker is a tool for building OCI images and related artifacts such
      as SBOMs natively via a declarative yaml format.
  - name: Telepresence
    stage: sandbox
    github: https://github.com/telepresenceio/telepresence
    docs: https://www.telepresence.io/
    description: https://www.telepresence.io/
  - name: Visual Studio Code Kubernetes Tools
    stage: sandbox
    github: https://github.com/vscode-kubernetes-tools/vscode-kubernetes-tools
    docs: https://marketplace.visualstudio.com/items?itemName=ms-kubernetes-tools.vscode-kubernetes-tools
    description: The extension for developers building applications to run in Kubernetes
      clusters and for DevOps staff troubleshooting Kubernetes applications.
  - name: xRegistry
    stage: sandbox
    github: https://github.com/xregistry/server
    docs: https://xregistry.io
    description: The xRegistry project defines an abstract model for managing metadata
      about resources and provides a REST-based interface to discover, create, modify
      and delete those resources.
  - name: Argo
    stage: graduated
    github: https://github.com/argoproj/argo-cd
    docs: https://argoproj.github.io/
    description: Kubernetes-native tools to run workflows, manage clusters, and do
      GitOps right.
  - name: Brigade
    stage: archived
    github: https://github.com/brigadecore/brigade
    docs: https://brigade.sh/
    description: https://brigade.sh/
  - name: Flux
    stage: graduated
    github: https://github.com/fluxcd/flux2
    docs: https://fluxcd.io/
    description: https://fluxcd.io/
  - name: Keptn
    stage: archived
    github: https://github.com/keptn/lifecycle-toolkit
    docs: https://www.keptn.sh
    description: Cloud-native application life-cycle orchestration. Keptn automates
      your SLO-driven multi-stage delivery and operations & remediation of your applications.
  - name: OpenGitOps
    stage: sandbox
    github: https://github.com/open-gitops/project
    docs: https://opengitops.dev/
    description: https://opengitops.dev/
  - name: OpenKruise
    stage: incubating
    github: https://github.com/openkruise/kruise
    docs: https://openkruise.io/
    description: https://openkruise.io/
  - name: PipeCD
    stage: sandbox
    github: https://github.com/pipe-cd/pipecd
    docs: https://pipecd.dev/
    description: GitOps style continuous delivery platform that provides consistent
      deployment and operations experience for any applications
  - name: werf
    stage: sandbox
    github: https://github.com/werf/werf
    docs: https://werf.io/
    description: werf is a solution for implementing efficient and consistent software
      delivery to Kubernetes. It covers the entire CI/CD lifecycle and all related
      artifacts, glues commonly used tools (Git, Docker/Buildah, Helm, K8s) and facilitates
      best practices.
  - name: Kube-burner
    stage: sandbox
    github: https://github.com/kube-burner/kube-burner
    docs: https://kube-burner.github.io/kube-burner/
    description: https://kube-burner.github.io/kube-burner/
  - name: Flatcar Container Linux
    stage: incubating
    github: https://github.com/flatcar/Flatcar
    docs: https://www.flatcar.org/
    description: A community Linux distribution designed for container workloads,
      with high security and low maintenance
  - name: k3s
    stage: sandbox
    github: https://github.com/k3s-io/k3s
    docs: https://k3s.io
    description: Lightweight Kubernetes
  - name: KubeClipper
    stage: sandbox
    github: https://github.com/kubeclipper/kubeclipper
    docs: https://www.kubeclipper.io/
    description: Manage kubernetes in the most light and convenient way.
  - name: Cozystack
    stage: sandbox
    github: https://github.com/cozystack/cozystack
    docs: https://cozystack.io
    description: Cozystack is a free PaaS platform and framework for building private
      clouds and providing users/customers with managed Kubernetes,  KubeVirt-based
      VMs, databases as a service, NATS, message brokers, etc. with GPU support in
      VMs and Kubernetes clusters.
  - name: SlimFaaS
    stage: sandbox
    github: https://github.com/SlimPlanet/SlimFaas
    docs: https://github.com/SlimPlanet/SlimFaas
    description: The slimest and simplest Function As A Service
  - name: OpenFeature
    stage: incubating
    github: https://github.com/open-feature/spec
    docs: https://openfeature.dev/
    description: Standardizing Feature Flagging for Everyone
  - name: Chaos Mesh
    stage: incubating
    github: https://github.com/chaos-mesh/chaos-mesh
    docs: https://chaos-mesh.org/
    description: https://chaos-mesh.org/
  - name: Chaosblade
    stage: sandbox
    github: https://github.com/chaosblade-io/chaosblade
    docs: https://chaosblade.io/
    description: https://chaosblade.io/
  - name: Litmus
    stage: incubating
    github: https://github.com/litmuschaos/litmus
    docs: https://litmuschaos.io/
    description: https://litmuschaos.io/
  - name: Krkn
    stage: sandbox
    github: https://github.com/krkn-chaos/krkn
    docs: https://krkn-chaos.github.io/krkn
    description: Chaos testing tool for Kubernetes to identify bottlenecks and improve
      resilience and performance under failure conditions.
  - name: OpenCost
    stage: incubating
    github: https://github.com/opencost/opencost
    docs: https://www.opencost.io/
    description: OpenCost provides visibility into current and historical Kubernetes
      spend and resource allocation.
  - name: Cortex
    stage: incubating
    github: https://github.com/cortexproject/cortex
    docs: https://cortexmetrics.io/
    description: https://cortexmetrics.io/
  - name: Fluentd
    stage: graduated
    github: https://github.com/fluent/fluentd
    docs: https://www.fluentd.org/
    description: https://www.fluentd.org/
  - name: Fonio
    stage: archived
    github: https://github.com/foniod/foniod
    docs: https://ingraind.org/
    description: https://ingraind.org/
  - name: Inspektor Gadget
    stage: sandbox
    github: https://github.com/inspektor-gadget/inspektor-gadget
    docs: https://inspektor-gadget.io/
    description: Open source eBPF debugging and data collection tool for Kubernetes
      and Linux
  - name: Jaeger
    stage: graduated
    github: https://github.com/jaegertracing/jaeger
    docs: https://www.jaegertracing.io/
    description: https://www.jaegertracing.io/
  - name: K8sGPT
    stage: sandbox
    github: https://github.com/k8sgpt-ai/k8sgpt
    docs: https://www.k8sgpt.ai
    description: https://www.k8sgpt.ai
  - name: Kepler
    stage: sandbox
    github: https://github.com/sustainable-computing-io/kepler
    docs: https://sustainable-computing.io/
    description: Kepler (Kubernetes-based Efficient Power Level Exporter) uses eBPF
      to probe energy related system stats and exports as Prometheus metrics.
  - name: Kuberhealthy
    stage: sandbox
    github: https://github.com/kuberhealthy/kuberhealthy
    docs: https://github.com/kuberhealthy/kuberhealthy
    description: https://github.com/kuberhealthy/kuberhealthy
  - name: Logging Operator (Kube Logging)
    stage: sandbox
    github: https://github.com/kube-logging/logging-operator
    docs: https://kube-logging.dev/
    description: https://kube-logging.dev/
  - name: OpenMetrics
    stage: archived
    github: https://github.com/OpenObservability/OpenMetrics
    docs: https://openmetrics.io/
    description: https://openmetrics.io/
  - name: OpenTelemetry
    stage: incubating
    github: https://github.com/open-telemetry/community
    docs: https://opentelemetry.io/
    description: https://opentelemetry.io/
  - name: OpenTracing
    stage: archived
    github: https://github.com/opentracing/opentracing-go
    docs: https://opentracing.io/
    description: https://opentracing.io/
  - name: Perses
    stage: sandbox
    github: https://github.com/perses/perses
    docs: https://perses.dev
    description: Perses is a dashboard tool to visualize observability data from Prometheus/Thanos/Jaeger.
  - name: Pixie
    stage: sandbox
    github: https://github.com/pixie-io/pixie
    docs: https://px.dev/
    description: Open source Kubernetes observability for developers
  - name: Prometheus
    stage: graduated
    github: https://github.com/prometheus/prometheus
    docs: https://prometheus.io/
    description: https://prometheus.io/
  - name: Skooner
    stage: archived
    github: https://github.com/skooner-k8s/skooner
    docs: https://skooner.io/
    description: https://skooner.io/
  - name: Thanos
    stage: incubating
    github: https://github.com/thanos-io/thanos
    docs: https://thanos.io/
    description: https://thanos.io/
  - name: Trickster
    stage: sandbox
    github: https://github.com/trickstercache/trickster
    docs: https://trickstercache.org
    description: https://trickstercache.org
  - name: SpinKube
    stage: sandbox
    github: https://github.com/spinframework/spin-operator
    docs: https://www.spinkube.dev/
    description: Open source platform for efficiently running (containerless) Spin-based
      WebAssembly (Wasm) applications on Kubernetes.
  - name: container2wasm
    stage: sandbox
    github: https://github.com/container2wasm/container2wasm
    docs: https://github.com/container2wasm/container2wasm
    description: A tool to run containers on Wasm-enabled environments.
  - name: KAITO
    stage: sandbox
    github: https://github.com/kaito-project/kaito
    docs: https://kaito-project.netlify.app/
    description: Kubernetes AI Toolchain Operator (KAITO) simplifies LLM inference,
      tuning, and RAG workloads on Kubernetes.
  - name: KServe
    stage: incubating
    github: https://github.com/kserve/kserve
    docs: https://kserve.github.io/website/
    description: Standardized Distributed Generative and Predictive AI Inference Platform
      for Scalable, Multi-Framework Deployment on Kubernetes
